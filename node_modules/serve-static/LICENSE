import {reservedWords, keywords} from "./identifier"
import {types as tt} from "./tokentype"
import {lineBreak} from "./whitespace"

export function Parser(options, input, startPos) {
  this.options = options
  this.sourceFile = this.options.sourceFile || null
  this.isKeyword = keywords[this.options.ecmaVersion >= 6 ? 6 : 5]
  this.isReservedWord = reservedWords[this.options.ecmaVersion]
  this.input = input

  // Load plugins
  this.loadPlugins(this.options.plugins)

  // Set up token state

  // The current position of the tokenizer in the input.
  if (startPos) {
    this.pos = startPos
    this.lineStart = Math.max(0, this.input.lastIndexOf("\n", startPos))
    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length
  } else {
    this.pos = this.lineStart = 0
    this.curLine = 1
  }

  // Properties of the current token:
  // Its type
  this.type = tt.eof
  // For tokens that include more information than their type, the value
  this.value = null
  // Its start and end offset
  this.start = this.end = this.pos
  // And, if locations are used, the {line, column} object
  // corresponding to those offsets
  this.startLoc = this.endLoc = null

  //